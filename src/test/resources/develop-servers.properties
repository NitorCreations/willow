deployer.launch=metrics_server
deployer.name=metrics_server
deployer.launch.method=JAVA
#deployer.launch.java.arg[]=-agentlib\:jdwp=transport=dt_socket,server=y,suspend=y,address=4444
deployer.statistics.uri=ws://localhost:5121/statistics/${deployer.host}?tag=host_${deployer.host}&tag=group_frontend
deployer.launch.java.mainclass=com.nitorcreations.willow.servers.MetricsServer
deployer.launch.java.classpath=../../willow-servers/src/main/resources${path.separator}../../willow-servers/target/willow-servers-2.0.1-uber.jar
deployer.launch.java.arg[]=-Dwslogging.url=${deployer.statistics.uri}
deployer.launch.java.arg[]=-Dwillow.hostLookupService=com.nitorcreations.willow.servers.HostInfoHostLookupService
deployer.launch.java.arg[]=-Dwillow.hostLookupService.ipAddressType=PRIVATE
#deployer.launch.java.arg[]=-Denv=prod
#deployer.launch.java.arg[]=-Ddebug=true
deployer.launch.skipOutputRedirect=true
deployer.launch.workdir=target/metrics
deployer.statistics[]=platform
deployer.statistics[]=process
deployer.statistics[]=jmx
deployer.statistics[]=threaddump
deployer.statistics[]=ptql
deployer.statistics[last].query=State.Name.eq=java,Args.*.eq=com.nitorcreations.willow.deployer.Main
deployer.statistics[]=customjmx
deployer.statistics[last].property[]=poolthreads
deployer.statistics[last].property[last].objectname=org.eclipse.jetty.util.thread:type=queuedthreadpool,id=0
deployer.statistics[last].property[last].attribute=threads
deployer.statistics[last].property[]=loglevel
deployer.statistics[last].property[last].objectname=java.util.logging:type=Logging
deployer.statistics[last].property[last].method=getLoggerLevel
deployer.statistics[last].property[last].argument[]=
deployer.statistics[]=hostinfo
#deployer.statistics[last].ssh_username=reino
deployer.statistics[last].interface_name=<script>function exists(interface) {\n\
\  var ifs = Java.type("java.net.NetworkInterface");\n\
\  var enumeration = ifs.getNetworkInterfaces();\n\
\  while (enumeration.hasMoreElements()) {\n\
\    var nif = enumeration.nextElement();\n\
\    if (nif.getName() === interface) {\n\
\      return true;\n\
\    }\n\
\  }\n\
\  return false;\n\
};\n\
function resolveIf() {\n\
\  if (exists("wlan0")) return "wlan0";\n\
\  if (exists("en0")) return "en0";\n\
\  if (exists("en1")) return "en1";\n\
\  if (exists("en2")) return "en2";\n\
\  if (exists("en3")) return "en3";\n\
\  if (exists("en4")) return "en4";\n\
\  if (exists("en5")) return "en5";\n\
\  if (exists("eno0")) return "eno0";\n\
\  if (exists("eno1")) return "eno1";\n\
\  return "eth0";\n\
}; resolveIf();</script>
